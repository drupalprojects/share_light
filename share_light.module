<?php

/**
 * @file
 *
 * Defines all hook implementations or other functions that
 * must be loaded in every request.
 */

require_once dirname(__FILE__) . '/includes/block.php';
require_once dirname(__FILE__) . '/includes/fields.php';

/**
 * helper config function.
 */
function _share_light_channels() {
  // return the known channles indexed by channel name
  return array(
    'twitter' => t('Twitter'),
    'facebook' => t('Facebook'),
    'email' => t('Email'),
    'pinterest' => t('Pinterest'),
  );
}

function _share_light_defaults() {
  $default = array(
    'toggle' => variable_get('share_light_default_toggle', 1),
    'options' => array (
      'subject' => t('Share this page!'),
      'share_url' => '',
      'counter_toggle' => variable_get('share_light_default_counter_toggle', 1),
      'advanced' => array (
        'channel_facebook_toggle' => 1,
        'channel_email_toggle' => 1,
        'channel_pinterest_toggle' => 1,
        'channel_pinterest_text' => '',
        'channel_twitter_toggle' => 1,
        'channel_twitter_text' => '',
      ),
      'image' => array(
        'fid' => 0,
      ),
    ),
  );
  return $default;
}



/**
 * Implements hook_menu().
 */
function share_light_menu() {
  $items['node/%node/share'] = array(
    'page callback' => 'share_light_node_email_page',
    'page arguments' => array(1),
    'access callback' => 'node_access',
    'access arguments' => array('view', 1),
    'file' => 'includes/pages.php',
    'type' => MENU_CALLBACK,
  );
  $items['share-via-email'] = array(
    'page callback' => 'share_light_url_email_page',
    'access callback' => TRUE, # TODO proper access callback
    'file' => 'includes/pages.php',
    'type' => MENU_CALLBACK,
  );
  $items['node/%node/share-settings'] = array(
    'title'            => 'E-Mail share',
    'description'      => 'Configure settings for sharing this node via e-mail.',
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('share_light_node_email_settings', 1),
    'access arguments' => array('administer share'),
    'file' => 'includes/admin_pages.php',
    'type' => MENU_LOCAL_TASK,
  );
  $items['admin/config/content/share-light'] = array(
    'title' => t('Share light'),
    'page callback'  => 'drupal_get_form',
    'page arguments' => array('share_light_settings_form'),
    'description'    => 'Share light settings.',
    'file'           => 'includes/admin_pages.php',
    'access arguments' => array('administer share'),
  );
  $items['admin/config/content/share-light/block'] = array(
    'title' => t('Block settings'),
    'type' => MENU_DEFAULT_LOCAL_TASK,
  ) + $items['admin/config/content/share-light'];
  $items['admin/config/content/share-light/email'] = array(
    'description'      => 'Email settings.',
    'title'            => 'Share via E-Mail',
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('share_light_email_admin_form'),
    'access arguments' => array('administer share'),
    'file'             => 'includes/admin_pages.php',
    'type'             => MENU_LOCAL_TASK,
  );
  return $items;
}

/**
 * Implements hook_permission().
 */
function share_light_permission() {
  $permissions['administer share'] = array(
    'title'       => t('Administer share light settings'),
    'description' => t('Administer site-wide settings for share light.'),
  );
  return $permissions;
}

/**
 * Implements hook_tokens().
 */
function share_light_tokens($type, $tokens, array $data = array(), array $options = array()) {
  $replacements = array();
  if ($type = 'node' && isset($data['share'])) {
    foreach ($tokens as $name => $original) {
      switch ($name) {
        case 'recipients':
          $replacements[$original] = isset($data['share']['recipients']) ? filter_xss(implode($data['share']['recipients'], ', ')) : t('(Recipient list)');
          break;
        case 'sender':
          $replacements[$original] = isset($data['share']['sender']) ? filter_xss($data['share']['sender']) : t('(Your name)');
          break;
        case 'url':
          if (isset($data['share']['url'])) {
            $replacements[$original] = $data['share']['url'];
          }
          break;
      }
    }
  }
  return $replacements;
}

/**
 * Implements hook_theme().
 */
function share_light_theme() {
  $info['share_light_message_body'] = array(
    'variables' => array('node' => NULL, 'values' => array()),
    'template' => 'share-message-body',
  );
  return $info;
}

/**
 * Implements hook_admin_paths().
 */
function share_light_admin_paths() {
  $paths['node/*/share-settings'] = TRUE;
  return $paths;
}

/**
 * Implements hook_mail().
 */
function share_light_mail($key, &$message, $params) {
  $message['headers'] = array_merge($message['headers'], $params['headers']);
  $message['subject'] = $params['subject'];
  $message['body'][] = $params['message'];
}
